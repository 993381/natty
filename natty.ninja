cc = cc
cxx = c++
ld = $cc
ldxx = $cxx
ar = ar

pool link_pool
  depth = 1

rule cc
  command = $cc -MMD -MF $out.d $defines $includes $cflags $cflags_c $cflags_pch_c -c $in -o $out
  description = CC $out
  depfile = $out.d
  deps = gcc
rule cc_s
  command = $cc $defines $includes $cflags $cflags_c $cflags_pch_c -c $in -o $out
  description = CC $out
rule cxx
  command = $cxx -MMD -MF $out.d $defines $includes $cflags $cflags_cc $cflags_pch_cc -c $in -o $out
  description = CXX $out
  depfile = $out.d
  deps = gcc
rule alink
  command = rm -f $out && $ar rcs $out $in
  description = AR $out
rule alink_thin
  command = rm -f $out && $ar rcsT $out $in
  description = AR $out
rule solink
  command = if [ ! -e $lib -o ! -e ${lib}.TOC ]; then $ld -shared $ldflags -o $lib -Wl,-soname=$soname $
      -Wl,--whole-archive $in $solibs -Wl,--no-whole-archive $libs && { readelf -d ${lib} | grep SONAME ; nm -gD -f p $
      ${lib} | cut -f1-2 -d' '; } > ${lib}.TOC; else $ld -shared $ldflags -o $lib -Wl,-soname=$soname $
      -Wl,--whole-archive $in $solibs -Wl,--no-whole-archive $libs && { readelf -d ${lib} | grep SONAME ; nm -gD -f p $
      ${lib} | cut -f1-2 -d' '; } > ${lib}.tmp && if ! cmp -s ${lib}.tmp ${lib}.TOC; then mv ${lib}.tmp ${lib}.TOC ; $
      fi; fi
  description = SOLINK $lib
  pool = link_pool
  restat = 1
rule solink_module
  command = if [ ! -e $lib -o ! -e ${lib}.TOC ]; then $ld -shared $ldflags -o $lib -Wl,-soname=$soname $
      -Wl,--start-group $in $solibs -Wl,--end-group $libs && { readelf -d ${lib} | grep SONAME ; nm -gD -f p ${lib} | $
      cut -f1-2 -d' '; } > ${lib}.TOC; else $ld -shared $ldflags -o $lib -Wl,-soname=$soname -Wl,--start-group $in $
      $solibs -Wl,--end-group $libs && { readelf -d ${lib} | grep SONAME ; nm -gD -f p ${lib} | cut -f1-2 -d' '; } > $
      ${lib}.tmp && if ! cmp -s ${lib}.tmp ${lib}.TOC; then mv ${lib}.tmp ${lib}.TOC ; fi; fi
  description = SOLINK(module) $lib
  pool = link_pool
  restat = 1
rule link
  command = $ld $ldflags -o $out -Wl,--start-group $in $solibs -Wl,--end-group $libs
  description = LINK $out
  pool = link_pool
rule stamp
  command = ${postbuilds}touch $out
  description = STAMP $out
rule copy
  command = ln -f $in $out 2>/dev/null || (rm -rf $out && cp -af $in $out)
  description = COPY $in $out
 
build build/trunk/out/Release/obj/natty.actions_depends.stamp: stamp $
    build/trunk/out/Release/libcrssl.a build/trunk/out/Release/libjingle.a $
    build/trunk/out/Release/libcrssl.a build/trunk/out/Release/libjsoncpp.a

defines = -DV8_DEPRECATION_WARNINGS -DEXPAT_RELATIVE_PATH $
    -DFEATURE_ENABLE_VOICEMAIL -DGTEST_RELATIVE_PATH $
    -DJSONCPP_RELATIVE_PATH -DLOGGING=1 -DSRTP_RELATIVE_PATH $
    -DFEATURE_ENABLE_SSL -DFEATURE_ENABLE_PSTN -DHAVE_SRTP $
    -DHAVE_WEBRTC_VIDEO -DHAVE_WEBRTC_VOICE -DUSE_WEBRTC_DEV_BRANCH $
    -D_FILE_OFFSET_BITS=64 -DCHROMIUM_BUILD -DTOOLKIT_VIEWS=1 $
    -DUI_COMPOSITOR_IMAGE_TRANSPORT -DUSE_AURA=1 -DUSE_CAIRO=1 -DUSE_GLIB=1 $
    -DUSE_DEFAULT_RENDER_THEME=1 -DUSE_LIBJPEG_TURBO=1 -DUSE_NSS=1 $
    -DUSE_X11=1 -DUSE_CLIPBOARD_AURAX11=1 -DENABLE_ONE_CLICK_SIGNIN $
    -DUSE_XI2_MT=2 -DENABLE_REMOTING=1 -DENABLE_WEBRTC=1 $
    -DENABLE_PEPPER_CDMS -DENABLE_CONFIGURATION_POLICY $
    -DENABLE_INPUT_SPEECH -DENABLE_NOTIFICATIONS -DUSE_UDEV $
    -DENABLE_EGLIMAGE=1 -DENABLE_TASK_MANAGER=1 -DENABLE_EXTENSIONS=1 $
    -DENABLE_PLUGIN_INSTALLATION=1 -DENABLE_PLUGINS=1 $
    -DENABLE_SESSION_SERVICE=1 -DENABLE_THEMES=1 -DENABLE_AUTOFILL_DIALOG=1 $
    -DENABLE_BACKGROUND=1 -DENABLE_AUTOMATION=1 -DENABLE_GOOGLE_NOW=1 $
    -DCLD_VERSION=2 -DENABLE_FULL_PRINTING=1 -DENABLE_PRINTING=1 $
    -DENABLE_SPELLCHECK=1 -DENABLE_CAPTIVE_PORTAL_DETECTION=1 $
    -DENABLE_APP_LIST=1 -DENABLE_SETTINGS_APP=1 -DENABLE_MANAGED_USERS=1 $
    -DENABLE_MDNS=1 -DLIBPEERCONNECTION_LIB=1 -DLINUX -DHAVE_SCTP $
    -DHASH_NAMESPACE=__gnu_cxx -DPOSIX -DDISABLE_DYNAMIC_CAST -D_REENTRANT $
    -DSSL_USE_NSS -DHAVE_NSS_SSL_H -DSSL_USE_NSS_RNG -DNDEBUG -DNVALGRIND $
    -DDYNAMIC_ANNOTATIONS_ENABLED=0
includes = -Ibuild/trunk -Ibuild/trunk/third_party -Ibuild/trunk/third_party/webrtc $
    -Ibuild/trunk/webrtc -Ibuild/trunk/net/third_party/nss/ssl $
    -Ibuild/trunk/third_party/jsoncpp/overrides/include $
    -Ibuild/trunk/third_party/jsoncpp/source/include
cflags = -fstack-protector --param=ssp-buffer-size=4 -pthread $
    -fno-exceptions -fno-strict-aliasing -Wno-unused-parameter $
    -Wno-missing-field-initializers -fvisibility=hidden -pipe -fPIC $
    -Wno-unused-local-typedefs -I/usr/include/nss -I/usr/include/nspr $
    -Wno-format -Wno-unused-result -O2 -fno-ident -fdata-sections $
    -ffunction-sections -funwind-tables
cflags_c = 
cflags_cc = -fno-rtti -fno-threadsafe-statics -fvisibility-inlines-hidden $
    -Wno-deprecated
cflags = -isysroot $
    /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.8.sdk $
    -O3 -gdwarf-2 -fvisibility=hidden -Werror -Wnewline-eof $
    -mmacosx-version-min=10.6 -arch i386 -Wendif-labels $
    -Wno-unused-parameter -Wno-missing-field-initializers -Wheader-hygiene $
    -Wno-c++11-narrowing -Wno-char-subscripts $
    -Wno-unneeded-internal-declaration -Wno-covered-switch-default $
    -Wstring-conversion
cflags_c = -std=c99 -fcolor-diagnostics -fno-strict-aliasing
cflags_cc = -std=gnu++11 -fno-rtti -fno-exceptions $
    -fvisibility-inlines-hidden -fno-threadsafe-statics -fcolor-diagnostics $
    -fno-strict-aliasing
cflags_objc = $cflags_c -Wobjc-missing-property-synthesis
cflags_objcc = $cflags_cc -Wobjc-missing-property-synthesis $
    -fobjc-call-cxx-cdtors
 
build out/natty/client/client.natty.o: $
    cxx src/natty.cc $
    build/trunk/out/Release/obj/natty.actions_depends.stamp
build out/natty/client/client.peer_connection_client.o: $
    cxx src/peer_connection_client.cc $
    build/trunk/out/Release/obj/natty.actions_depends.stamp
build out/natty/client/client.main.o
    cxx src/main.cc $
    build/trunk/out/Release/obj/natty.actions_depends.stamp

ldflags = -Wl,-z,now -Wl,-z,relro -pthread -Wl,-v,-z,noexecstack -fPIC $
    -B/home/todd/Dev/lantern/natty/build/trunk/third_party/gold $
    -Wl,--icf=none -Wl,-O1 -Wl,--as-needed -Wl,--gc-sections
libs =  -lnss3 -lnssutil3 -lsmime3 -lplds4 -lplc4 -lnspr4 -ldl -lcrypto $
    -lrt -lXext -lX11 -lXcomposite -lXrender -lexpat
build natty: link $
    out/natty/client/client.natty.o $
    out/natty/natty/client.peer_connection_client.o $
    out/natty/client/client.main.o
    build/trunk/out/Release/libjingle.a build/trunk/out/Release/libcrssl.a $
    build/trunk/out/Release/libjsoncpp.a
  ld = $ldxx
